package com.asiainfo.meo.customer.device.app.model.entity;

// Generated 2015-3-11 19:56:39 by Hibernate Tools 3.4.0.CR1

import java.sql.Timestamp;

/**
 * CmDeviceInfoId generated by hbm2java
 */
public class DeviceInfo implements java.io.Serializable
{
    private static final long  serialVersionUID   = -6287267366145168675L;
    
    /** sys type constant */
    public static final String OS_VERSION_IOS     = "1";
    
    /** sys type constant */
    public static final String OS_VERSION_ANDROID = "2";
    
    /** device type constant */
    public static final int    DEVICE_TYPE_PHONE  = 1;
    
    /** device type constant */
    public static final int    DEVICE_TYPE_IPAD   = 2;
    
    /** sts constant */
    public static final int    STS_VALID          = 1;
    
    /** sts constant */
    public static final int    STS_INVALID        = 2;
    
    private long               deviceId;
    
    // @NotEmpty(groups = {Update.class, Insert.class }, message = DeviceInfoErrorConstant.DEVICE_TOKEN_IS_EMPTY)
    private String             deviceToken;
    
    // @Enum(groups={Update.class,Insert.class},value={""+DEVICE_TYPE_PHONE,""+DEVICE_TYPE_IPAD},message=DeviceInfoErrorConstant.DEVICE_TYPE_IS_ERROR)
    private int                deviceType;
    
    // @Enum(value = {OS_VERSION_IOS, OS_VERSION_ANDROID },groups = {Update.class, Insert.class }, message =
    // DeviceInfoErrorConstant.DEVICE_OS_VERSION_IS_ERROR)
    // @NotEmpty(groups = {Update.class, Insert.class }, message = DeviceInfoErrorConstant.DEVICE_OS_VERSION_IS_EMPTY)
    private String             osVersion;
    
    // @Enum(groups = {Update.class, Insert.class }, value = {""+ STS_VALID, ""+ STS_INVALID }, message =
    // DeviceInfoErrorConstant.DEVICE_STATUS_IS_ERROR)
    private int                sts;
    
    private Timestamp          createDate;
    
    private Timestamp          modifyDate;
    
    private long               userId;
    
    private String             udid;
    
    private Integer            osType;
    
    public Integer getOsType()
    {
        return osType;
    }
    
    public void setOsType(Integer osType)
    {
        this.osType = osType;
    }
    
    public long getDeviceId()
    {
        return this.deviceId;
    }
    
    public void setDeviceId(long deviceId)
    {
        this.deviceId = deviceId;
    }
    
    public String getDeviceToken()
    {
        return this.deviceToken;
    }
    
    public void setDeviceToken(String deviceToken)
    {
        this.deviceToken = deviceToken;
    }
    
    public int getDeviceType()
    {
        return this.deviceType;
    }
    
    public void setDeviceType(int deviceType)
    {
        this.deviceType = deviceType;
    }
    
    public String getOsVersion()
    {
        return this.osVersion;
    }
    
    public void setOsVersion(String osVersion)
    {
        this.osVersion = osVersion;
    }
    
    public int getSts()
    {
        return this.sts;
    }
    
    public void setSts(int sts)
    {
        this.sts = sts;
    }
    
    public Timestamp getCreateDate()
    {
        return this.createDate;
    }
    
    public void setCreateDate(Timestamp createDate)
    {
        this.createDate = createDate;
    }
    
    public Timestamp getModifyDate()
    {
        return this.modifyDate;
    }
    
    public void setModifyDate(Timestamp modifyDate)
    {
        this.modifyDate = modifyDate;
    }
    
    public long getUserId()
    {
        return this.userId;
    }
    
    public void setUserId(long userId)
    {
        this.userId = userId;
    }
    
    public String getUdid()
    {
        return udid;
    }
    
    public void setUdid(String udid)
    {
        this.udid = udid;
    }
    
    public boolean isOsType()
    {
        return isAndroid()|| isIos();
    }
    
    public boolean isIos()
    {
        return OS_VERSION_IOS.equals(getOsVersion());
    }
    
    public boolean isAndroid()
    {
        return OS_VERSION_ANDROID.equals(getOsVersion());
    }
    
    /**
     * @Description: TODO(check device type)
     * @return
     */
    public boolean isType()
    {
        return isIpadType()|| isPhoneType();
    }
    
    public boolean isIpadType()
    {
        return getDeviceType()== DEVICE_TYPE_IPAD;
    }
    
    public boolean isPhoneType()
    {
        return getDeviceType()== DEVICE_TYPE_IPAD;
    }
    
    /**
     * @Description: TODO(contract status is right or error)
     * @return
     */
    public boolean isStatus()
    {
        return isInvalidSts()|| isValidSts();
    }
    
    public boolean isValidSts()
    {
        return getSts()== STS_VALID;
    }
    
    public boolean isInvalidSts()
    {
        return getSts()== STS_INVALID;
    }
}
